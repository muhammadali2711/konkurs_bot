from django.shortcuts import render
from referer.Buttons import Button, inline_btns
from referer.models import *
from referer.tgadmin import TGAdmin, rek_rasm, rek_video


def my_decorator_func(func):
    def wrapper_func(update, context):
        user_id = update.message.from_user.id
        my_channel_id = ['@fintechhubuz']
        statuss = ['creator', 'administrator', 'member']
        referer_id = None
        start_com = update.message.text
        try:
            a = start_com.split()
        except:
            a = []
        if len(a) > 1:
            referer_id = a[1]
        for j in my_channel_id:
            for i in statuss:
                if i == context.bot.get_chat_member(chat_id=j, user_id=user_id).status:
                    break
            else:
                s = f"<a href='https://t.me/texnakonkurs_bot?start={referer_id}'>/start</a>" if referer_id else "/start"
                context.bot.send_message(user_id,
                                         f"Assalomu Alaykum FintechHub üë®üèª‚Äçüíª\n\nQuydagi kanalarga obuna bo'ling va üëâ {s} bosing",
                                         reply_markup=inline_btns("reklama"),
                                         parse_mode="HTML",

                                         )
                return False
        func(update, context)

    return wrapper_func


@my_decorator_func
def start(update, context):
    start_com = update.message.text

    a = start_com.split()

    user = update.message.from_user
    tglog = Log.objects.filter(user_id=user.id).first()
    tg_user = TgUser.objects.filter(user_id=user.id).first()
    referer_id = None
    if len(a) > 1:
        referer_id = a[1]
    if not tglog:
        tglog = Log()
        tglog.user_id = user.id

        tglog.save()
    log = tglog.message
    print(log, f"a{referer_id}a", type(referer_id))

    if not tg_user:
        tg_user = TgUser()
        tg_user.user_id = user.id
        tg_user.user_name = user.username
        tg_user.first_name = user.first_name
        tg_user.refer_id = referer_id
        tg_user.save()
        log['state'] = 1
        update.message.reply_text('–ê—Å—Å–∞–ª–æ–º—É –∞–ª–µ–π–∫—É–º –∏—Å–º–∏–Ω–≥–∏–∑–Ω–∏ –∫–∏—Ä–∏—Ç–∏–Ω–≥ üòÉ')

        if referer_id:
            ref_friend = TgUser.objects.get(user_id=int(referer_id))
            ref_friend.odam = ref_friend.odam + 1
            ref_friend.ball = ref_friend.ball + 5
            ref_friend.save()
            context.bot.send_message(text=f"Sizga yangi odam qo'shildi {user.first_name}", chat_id=ref_friend.user_id)

            log['refer_id'] = referer_id
            tg_user.refer_id = referer_id

        tglog.message = log
        tglog.save()

        return 0

    print(log)
    update.message.reply_text('–ö—É–π–∏–¥–∞–≥–∏  –º–µ–Ω—é–¥–∞–Ω –∫–µ—Ä–∞–∫–ª–∏ –±—û–ª–∏–º–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥ üëá', reply_markup=Button('menu'))

    if tg_user.menu == 1:
        log.clear()
        log['admin_state'] = 1
        tglog.messages = log
        tglog.save()
        TGAdmin(update, context)
        return 0

    tg_user.menu_log = 0
    tg_user.save()
    log.clear()
    log['state'] = 0
    tglog.messages = log
    tglog.save()

    tglog.message = log
    tglog.save()


@my_decorator_func
def photo_handler(update, context):
    user = update.message.from_user
    tg_user = TgUser.objects.filter(user_id=user.id).first()
    tglog = Log.objects.filter(user_id=user.id).first()
    log = tglog.message
    state = log.get('state', 0)
    astate = log.get('admin_state', 0)
    if astate == 100:
        rek_rasm(update, context)
        return 0


@my_decorator_func
def video_handler(update, context):
    user = update.message.from_user
    video = update.message.video
    tg_user = TgUser.objects.filter(user_id=user.id).first()
    print(update.message.message_id, user.id)
    tglog = Log.objects.filter(user_id=user.id).first()
    log = tglog.message
    state = log.get('state', 0)
    astate = log.get('admin_state', 0)
    if astate == 100:
        rek_video(update, context)
        return 0


@my_decorator_func
def message_handler(update, context, ball=0, odam=None):
    user = update.message.from_user
    msg = update.message.text
    referer_id = None
    tglog = Log.objects.filter(user_id=user.id).first()
    tguser = TgUser.objects.filter(user_id=user.id).first()
    log = tglog.message

    if tguser.menu == 1:
        TGAdmin(update, context)
        return 0

    if msg == "/adm1NF1nTech6000":
        update.message.reply_text('Parolni kiriting')
        log['admin_state'] = 0
        tglog.message = log
        tglog.save()
        return 0

    if log.get('admin_state') == 0:
        if msg == "enigma6000":
            tguser.menu = 1
            tguser.save()
            log.clear()
            log['admin_state'] = 1
            tglog.message = log
            tglog.save()
            # update.message.reply_text("Admin bo'limiga xush kelibsiz")
            TGAdmin(update, context)
            return 0
        else:
            update.message.reply_text("Parolni notog'ri kiridingiz")
            return 0

    if log['state'] == 1:
        log['state'] = 3
        log['name'] = msg
        update.message.reply_text("–¢–µ–ª–µ—Ñ–æ–Ω —Ä–∞–∫–∞–º–∏–Ω–≥–∏–∑–Ω–∏ —é–±–æ—Ä–∏—à —É—á—É–Ω –ø–∞—Å—Ç–¥–∞–≥–∏ '–†–∞–∫–∞–º–Ω–∏ —é–±–æ—Ä–∏—à üì≤' —Ç—É–≥–º–∞—Å–∏–Ω–∏ –±–æ—Å–∏–Ω–≥",
                                  reply_markup=Button(type='contact'))

    if msg == "üéÅ –¢–ê–ù–õ–û–í–î–ê –ò–®–¢–ò–†–û–ö –≠–¢–ò–®":
        update.message.reply_text("–ë–∞–ª–ª —Ç—û–ø–ª–∞—à —É—á—É–Ω —Å–∏–∑–≥–∞ –±–µ—Ä–∏–ª–∞–¥–∏–≥–∞–Ω —Ä–µ—Ñ–µ—Ä–∞–ª (–º–∞—Ö—Å—É—Å) –ª–∏–Ω–∫ –æ—Ä“õ–∞–ª–∏ –æ–¥–∞–º —Ç–∞–∫–ª–∏—Ñ "
                                  "“õ–∏–ª–∏—à–∏–Ω–≥–∏–∑ –∫–µ—Ä–∞–∫ –±—û–ª–∞–¥–∏. –¢–∞–∫–ª–∏—Ñ —ç—Ç–∏–ª–≥–∞–Ω “≥–∞—Ä –±–∏—Ä –æ–¥–∞–º —É—á—É–Ω 5 –±–∞–ª–ª –±–µ—Ä–∏–ª–∞–¥–∏",
                                  reply_markup=inline_btns("referal"))

    if msg == "üìù –®–∞—Ä—Ç–ª–∞—Ä":
        update.message.reply_text("–¢–ê–ù–õ–û–í –®–ê–†–¢–õ–ê–†–ò:\n\n"
                                  "‚ùóÔ∏è–£—à–±—É —Ç–∞–Ω–ª–æ–≤–¥–∞ 10—Ç–∞ “ì–æ–ª–∏–±–ª–∞—Ä —Ç—û–ø–ª–∞–≥–∞–Ω –±–∞–ª–ª–∞—Ä–∏–≥–∞ “õ–∞—Ä–∞–± –∞–Ω–∏“õ–ª–∞–Ω–∞–¥–∏.\n\n"
                                  "–ë–∞–ª–ª–∞—Ä “õ–∞–Ω–¥–∞–π —Ç—û–ø–ª–∞–Ω–∞–¥–∏?\n\n–ë–û–¢–¥–∞ –∫–µ–ª—Ç–∏—Ä–∏–ª–≥–∞–Ω 2 —Ç–∞ –∫–∞–Ω–∞–ª–≥–∞ –æ–±—É–Ω–∞ –±—û–ª–≥–∞—á,"
                                  "–ê—ä–∑–æ –±—û–ª–¥–∏–º —Ç—É–≥–º–∞—Å–∏–Ω–∏ –±–æ—Å–∏—à–∏–Ω–≥–∏–∑ –±–∏–ª–∞–Ω, —Å–∏–∑–≥–∞ –º–∞—Ö—Å—É—Å —Ä–µ—Ñ–µ—Ä–∞–ª –ª–∏–Ω–∫ (“≥–∞–≤–æ–ª–∞) –±–µ—Ä–∏–ª–∞–¥–∏."
                                  " –é—à–∞ –ª–∏–Ω–∫ –æ—Ä“õ–∞–ª–∏ –æ–±—É–Ω–∞ –±—û–ª–≥–∞–Ω “≥–∞—Ä –±–∏—Ä –∏–Ω—Å–æ–Ω —É—á—É–Ω —Å–∏–∑–≥–∞ 5 –±–∞–ª–ª–¥–∞–Ω –±–µ—Ä–∏–± –±–æ—Ä–∏–ª–∞–¥–∏. “ö–∞–Ω—á–∞ –∫—û–ø –±–∞–ª–ª –π–∏“ì—Å–∞–Ω–≥–∏–∑,"
                                  " “ì–æ–ª–∏–± –±—û–ª–∏—à –∏–º–∫–æ–Ω–∏—è—Ç–∏–Ω–≥–∏–∑ —à—É–Ω—á–∞ –æ—Ä—Ç–∏–± –±–æ—Ä–∞–¥–∏.\n\n"
                                  "‚åõÔ∏è –¢–∞–Ω–ª–æ–≤ 31 –¥–µ–∫–∞–±—Ä—å –∫—É–Ω–∏ 23:59–¥–∞ —è–∫—É–Ω–ª–∞–Ω–∞–¥–∏.\n\n"
                                  "‚ùóÔ∏è–î–∏“õ“õ–∞—Ç! –°—É–Ω—ä–∏–π (—û–ª–∏–∫ –∞–∫–∫–∞—É–Ω—Ç–ª–∞—Ä “õ—û—à–≥–∞–Ω) –Ω–∞–∫—Ä—É—Ç–∫–∞ –≤–∞ —Ö.–∫. –ª–∞—Ä–¥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω–≥–∞–Ω–ª–∞—Ä —Ç–∞–Ω–ª–æ–≤–¥–∞–Ω —á–µ—Ç–ª–∞—à—Ç–∏—Ä–∏–ª–∞–¥–∏!\n\n"
                                  "üöö –¢–∞–Ω–ª–æ–≤ —Å—û–Ω–≥–∏–¥–∞ —Å–æ–≤—Ä–∏–Ω–ª–∞—Ä –é–∑–±–µ–∫–∏—Å—Ç–æ –±—û–π–∏—á–∞ –ø–æ—á—Ç–∞ –æ—Ä“õ–∞–ª–∏ –ë–ï–ü–£–õ –µ—Ç–∫–∞–∑–∏–± –±–µ—Ä–∏–ª–∞–¥–∏.\n\n"
                                  "üòÄ –§–∞–æ–ª –±—û–ª–∏–Ω–≥ –≤–∞ —Å–æ–≤—Ä–∏–Ω–ª–∞—Ä–¥–∞–Ω –±–∏—Ä–∏–Ω–∏ —é—Ç–∏–± –æ–ª–∏–Ω–≥. –ë–∞—Ä—á–∞–≥–∞ –æ–º–∞–¥!\n\n")

    elif msg == "–ú–µ–Ω–∏–Ω–≥ —Ç–æ–ø–ª–∞–≥–∞–Ω –±–∞–ª–ª–∞—Ä–∏–º üí≥":
        odam = TgUser.objects.get(user_id=user.id)
        update.message.reply_text(f"–°–∏–∑ {odam.odam} —Ç–∞ –æ–¥–∞–º —á–∞–∫–∏—Ä–≥–∞–Ω—Å–∏–∑üó£\n–£–º—É–º–∏–π –±–∞–ª–∏–Ω–≥–∏–∑ {odam.ball} üí∏")

        tglog.message = log
        tglog.save()
        return 0

    elif msg == "üìä –†–µ–π—Ç–∏–Ω–≥":
        s = "üìä –ë–æ—Ç–∏–º–∏–∑–≥–∞ —ç–Ω–≥ –∫—û–ø –¥—û—Å—Ç–∏–Ω–∏ —Ç–∞–∫–ª–∏—Ñ “õ–∏–ª–∏–± –±–∞–ª–ª —Ç—û–ø–ª–∞–≥–∞–Ω–ª–∞—Ä —Ä—û–π“≥–∞—Ç–∏:\n\n"
        top10 = TgUser.objects.all().order_by('-ball')[:10]
        for i, j in zip(range(1, len(top10)), top10):
            s += f"{i} - {j.first_name} - {j.ball} –±–∞–ª–ªüí∏\n"

        s += "‚Äº–ù–∞–∫—Ä—É—Ç–∫–∞ “õ–∏–ª–≥–∞–Ω–ª–∞—Ä, –ø—É–ª–ª–∏–∫ —Å–ø–∞–º–ª–∞—Ä–¥–∞–Ω, üîû –∞—Ö–ª–æ“õ—Å–∏–∑ –∫–∞–Ω–∞–ª–ª–ª–∞—Ä–¥–∞ —Å–ø–∞–º —Ç–∞—Ä“õ–∞—Ç–≥–∞–Ω–ª–∞—Ä –∫–æ–Ω–∫—É—Ä—Å–¥–∞–Ω —á–µ—Ç–ª–∞—à—Ç–∏—Ä–∏–ª–∞–¥–∏. ‚ÄºÔ∏è"

        update.message.reply_text(s)
    tglog.message = log
    tglog.save()


@my_decorator_func
def contact_handler(update, context):
    contact = update.message.contact
    user = update.message.from_user
    tg_user = TgUser.objects.filter(user_id=user.id).first()
    tglog = Log.objects.filter(user_id=user.id).first()
    log = tglog.message
    if log['state'] == 3:
        log['phone'] = contact.phone_number
        tg_user.name = log['name']

        tg_user.phone_number = log['phone']
        tg_user.save()
        log.clear()
        log['state'] = 9
        print('g')
        update.message.reply_text('"IT Masters" “≥–∞–º–¥–∞ "Excel Hacks"\n'
                                  '—Ö–∞–º–∫–æ—Ä–ª–∏–≥–∏–¥–∞ —Ç–∞—à–∫–∏–ª —ç—Ç–∏–ª–≥–∞–Ω —Ç–µ—Ö–Ω–æ\n'
                                  '–∫–æ–Ω–∫—É—Ä—Å–¥–∞ –∏—à—Ç–∏—Ä–æ–∫ —ç—Ç–∏–Ω–≥ –≤–∞ “õ—É–π–∏–¥–∞–≥–∏\n'
                                  '—Å–æ–≤—Ä–∏–Ω–ª–∞—Ä–¥–∞–Ω –±–∏—Ä–∏–Ω–∏ —é—Ç–∏–± –æ–ª–∏–Ω–≥!\n\n'
                                  'ü•á 1-—û—Ä–∏–Ω: RGB Gaming Combo 4 in 1\n'
                                  ' (–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞, —Å–∏—á“õ–æ–Ω—á–∞, “õ—É–ª–æ“õ—á–∏–Ω–ª–∞—Ä –≤–∞ –∫–æ–≤—Ä–∏–∫)\n'
                                  'ü•à 2-—û—Ä–∏–Ω: UzBrand –Ω–æ—É—Ç–±—É–∫ —Å—É–º–∫–∞—Å–∏ –≤–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.\n'
                                  'ü•â 3-—û—Ä–∏–Ω: Freemotion B525 Wireless “õ—É–ª–æ“õ—á–∏–Ω–ª–∞—Ä–∏.\n\n'
                                  '4-—û—Ä–∏–Ω: Game –∫–æ–≤—Ä–∏–∫ 30X80 –≤–∞ –ö200 –∫–æ–ª–æ–Ω–∫–∞–ª–∞—Ä.\n'
                                  '5-—û—Ä–∏–Ω: –ö200 –∫–æ–ª–æ–Ω–∫–∞–ª–∞—Ä –≤–∞ —Å–∏—á“õ–æ–Ω—á–∞.\n'
                                  '6-—û—Ä–∏–Ω: 16 Gb USB 3.0 —Ñ–ª–µ—à–∫–∞ –≤–∞ —Å–∏—á“õ–æ–Ω—á–∞\n'
                                  '7-—û—Ä–∏–Ω: USB hub –≤–∞ —Å–∏—á“õ–æ–Ω—á–∞.\n'
                                  '8-—û—Ä–∏–Ω: 8 Gb –ª–∏ —Ñ–ª–µ—à–∫–∞ –≤–∞ —Å–∏—á“õ–æ–Ω—á–∞\n'
                                  '9-—û—Ä–∏–Ω: Gaming Mouse M160.\n'
                                  '10-—û—Ä–∏–Ω: 16 Gb –ª–∏ Hikvision M200S USB 3.0 —Ñ–ª–µ—à–∫–∞.\n\n'
                                  '‚è± –¢–∞–Ω–ª–æ–≤ 31 –î–µ–∫–∞–±—Ä—å 23:59 –≥–∞—á–∞ –¥–∞–≤–æ–º —ç—Ç–∞–¥–∏.')

        update.message.reply_text(
            "–¢–∞–±—Ä–∏–∫–ª–∞–π–º–∏–∑ —Å–∏–∑ –º—É–≤–∞—Ñ—Ñ–∞–∫–∏–π–∞—Ç–ª–∏ —Ä–æ–π—Ö–∞—Ç–¥–∞–Ω –æ—Ç–¥–∏–Ω–≥–∏–∑ ü´∂\n"
            "–ö—É–π–∏–¥–∞–≥–∏ ¬´–¢–∞–Ω–ª–æ–≤–¥–∞ –∏—à—Ç–∏—Ä–æ–∫ —ç—Ç–∏—à¬ª –±—û–ª–∏–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥ üëá üëá", reply_markup=Button("menu"))

    tglog.message = log
    tglog.save()


def callback_handler(update, context, kwargs=None):
    query = update.callback_query
    data = query.data
    user = query.from_user
    tglog = Log.objects.filter(user_id=user.id).first()
    tg_user = TgUser.objects.filter(user_id=user.id).first()
    log = tglog.message

    if data == "refr":
        log['state'] = 20
        query.message.reply_text("–≠–Ω–≥ —Å–∞—Ä–∞ 10 —Ç–∞ —Å–æ–≤—Ä–∏–Ω–ª–∞—Ä–¥–∞–Ω –±–∏—Ä–∏–Ω–∏ —é—Ç–∏–± –æ–ª–∏—à–Ω–∏ –∏—Å—Ç–∞–π—Å–∏–∑–º–∏?\n–£–Ω–¥–∞ ¬´IT Masters¬ª “≥–∞–º–¥–∞ "
                                 "¬´Excel Hacks¬ª “≥–∞–º–∫–æ—Ä–ª–∏–≥–∏–¥–∞ —Ç–∞—à–∫–∏–ª —ç—Ç–∏–ª–≥–∞–Ω —Ç–∞–Ω–ª–æ–≤–¥–∞ “õ–∞—Ç–Ω–∞—à–∏–±, –æ–º–∞–¥–∏–Ω–≥–∏–∑–Ω–∏ —Å–∏–Ω–∞–± –∫—û—Ä–∏–Ω–≥!\n\n"
                                 f"–¢–∞–Ω–ª–æ–≤–¥–∞ –∏—à—Ç–∏—Ä–æ–∫ —ç—Ç–∏—à —É—á—É–Ω üëá\nhttps://t.me/texnakonkurs_bot?start={user.id}")

        tglog.message = log
        tglog.save()
